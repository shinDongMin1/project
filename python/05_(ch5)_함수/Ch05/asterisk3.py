#"""
# -----------------------------------------------------------------------------------------------------------
# 실습 0 - 원본 프로그램.
# 개수가 정의되어 있지 않은 입력 파라미터를 일단 모두 한개의 tuple형 변수로 받은 후 이를 unpacking 해 본다.
#   앞의 2개는 변수 x, y로 받고 갯수가 정해지지 않은 나머지는 z 변수(사실 list)로 받는다.
# -----------------------------------------------------------------------------------------------------------


def asterisk_test_2(*args):  # 입력 파라미터가 몇 개인지 정의하지 않는다.
    print('\nin function: ', type(args), args)
    x, y, *z = args     # 3번째부터는 z이름으로 list로 unpacking한다.
    print('in function: ', type(z), z)
    return x, y, z      # 여러개를 반환할 때는 tuple로 반환한다.


print('in main: ', asterisk_test_2(3, 4, 5))          # (3, 4, [5])
print('in main: ', asterisk_test_2(3, 4, 5, 10, 20))  # (3, 4, [5, 10, 20])



def asterisk_test_2b(*args):
    x, *z = args
    return x, z
print()
print(asterisk_test_2b(3, 4, 5))
print(asterisk_test_2b(3, 4, 5, 10, 20))
# (3, [4, 5])
# (3, [4, 5, 10, 20])

exit(0)
#"""

# -----------------------------------------------------------------------------------------------------------
# 실습 1 - 잘못된 unpacking
# 개수를 정의되어 있지 않은 입력 파라미터를 unpacking 해보자.
# unpacking하는 올바른 방법
#   나머지 파라미터는 *로 마킹된 변수로 지정한다.
#   그러면 나머지 변수들은 list로 반환해 준다.
# -----------------------------------------------------------------------------------------------------------

def asterisk_test_2(*args):
    x, y, z = args
    return x, y, z

print(asterisk_test_2(3, 4, 5))             # 이곳은 이상없음.
print(asterisk_test_2(3, 4, 5, 10, 20))     # 파라미터 수가 맞지 않음.
